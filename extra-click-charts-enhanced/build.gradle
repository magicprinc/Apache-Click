plugins {
  id 'java-library'
  id 'idea'
  id 'maven-publish'

  id("io.freefair.lombok")   version "latest.release" // id 'io.franzbecker.gradle-lombok' version 'latest.release'
  id("name.remal.sonarlint") version "latest.release" // https://github.com/remal-gradle-plugins/sonarlint + https://lift.sonatype.com/
  id("net.ltgt.errorprone")  version "latest.release" // https://errorprone.info/
}

repositories {
  mavenLocal()
  mavenCentral()
}

sourceCompatibility = 17

//javadoc {
//  options.encoding = 'UTF-8'
//  options.addBooleanOption('html5', true)
//}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
  options.compilerArgs.addAll(['-Xlint:all', '-parameters', '-g', '-Xmaxwarns', '999'])
  options.release.set(17) // javac --release 7..18+
  options.deprecation = false // todo step2: deprecated

  options.errorprone {
    enabled = true
    disableWarningsInGeneratedCode = true
    excludedPaths = ".*/(build/gen|test).*/.*"
    disable("MissingSummary")
  }
}

publishing {
  publications { // artifactId = folder name
    maven(MavenPublication) {
      from components.java
    }
  }
}
// https://docs.gradle.org/current/userguide/publishing_maven.html
java {
  withSourcesJar()
//  withJavadocJar()
}

dependencies {
  errorprone "com.google.errorprone:error_prone_core:latest.release"
  // https://javadoc.io/doc/com.google.errorprone/error_prone_annotations/latest/index.html
  implementation("com.google.errorprone:error_prone_annotations:latest.release")
  // https://javadoc.io/doc/com.google.code.findbugs/jsr305/latest/index.html  [x] remove? jsr305â†’jsr308 ^ Nope! This is THE WINNER!
  implementation("com.google.code.findbugs:jsr305:latest.release")

  implementation 'javax.servlet:servlet-api:2.5'

  implementation 'org.slf4j:slf4j-api:1.7.+'
  implementation 'com.google.guava:guava:31.1-jre'
  implementation 'org.mvel:mvel2:latest.release'// 2.4.14

  implementation("com.github.ben-manes.caffeine:caffeine:latest.release")


  implementation 'commons-lang:commons-lang:2.+'
  //implementation 'commons-io:commons-io:2.+'
  implementation 'commons-fileupload:commons-fileupload:1.3.+'
  //implementation 'org.apache.velocity:velocity:1.+'


  implementation project(':click')

  //*** TEST TEST TEST

  testImplementation 'junit:junit:4.+'
  testImplementation 'org.mockito:mockito-inline:+'

  testRuntimeOnly 'org.slf4j:slf4j-simple:1.7.+'

  testImplementation project(':click-mock')
  testImplementation project(':click-velocity')
}

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

test {
  useJUnit()
  maxHeapSize = "500m"
  enableAssertions = true

  testLogging.showStandardStreams = true // show standard out & err of the test JVM on the console

  System.setProperty("slf4j.detectLoggerNameMismatch", "true")
  System.setProperty("file.encoding", "UTF-8")
  System.setProperty("user.language", "en")
  Locale.setDefault(new Locale("en", "US"));
}

lombok {
  version = "latest.release"
}
sonarLint {
  ignoreFailures = true
}