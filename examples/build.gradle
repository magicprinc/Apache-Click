plugins {
  id 'java'
  id 'war'
  id 'application'
  id 'idea'

  // https://github.com/bmuschko/gradle-tomcat-plugin
  id "com.bmuschko.tomcat" version "latest.release"
  //?  id("org.gretty") version "4.0.+" // https://gretty-gradle-plugin.github.io/gretty-doc/

  id("io.freefair.lombok")   version "latest.release" // id 'io.franzbecker.gradle-lombok' version 'latest.release'
}

java { // https://docs.gradle.org/current/userguide/toolchains.html
  toolchain {
    languageVersion = JavaLanguageVersion.of(8)
  }
}
repositories {
  mavenLocal()
  jcenter() // helps with JMS!
  maven {
    url "https://repository.jboss.org/maven2" // "https://repository.jboss.org/nexus/content/groups/public"
  }
  maven {
    url "https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/"
  }
  mavenCentral()
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
  options.compilerArgs.addAll(['-Xlint:all', '-parameters', '-g', '-Xmaxwarns', '999'])
  options.deprecation = true
}

dependencies {
  implementation("javax.annotation:javax.annotation-api:1.3.+") // @Resource

  implementation 'javax.servlet:servlet-api:2.5'

  def springVersion = '3.2.18.RELEASE'
  implementation("org.springframework:spring-core:${springVersion}", "org.springframework:spring-context:${springVersion}")
  implementation("org.springframework:spring-context-support:${springVersion}", "org.springframework:spring-web:${springVersion}")
  implementation("org.springframework:spring-jdbc:${springVersion}", "org.springframework:spring-tx:${springVersion}")
  implementation("org.springframework.security:spring-security-core:3.2.10.RELEASE",
    "org.springframework.security:spring-security-web:3.2.10.RELEASE", "org.springframework.security:spring-security-config:3.2.10.RELEASE")


  implementation project(':click')
  implementation project(':click-extras')
  implementation project(':click-cayenne')
  implementation project(':click-velocity')

  implementation 'org.apache.cayenne:cayenne-server:3.0.2'
  implementation("org.apache.poi:poi:3.6")
  implementation("opensymphony:quartz:1.6.+")
  implementation("org.objectstyle.ashwood:ashwood:2.0")


  implementation("hsqldb:hsqldb:1.8.0.10")
  implementation("javax.servlet:jstl:1.1.2")
  implementation("opensymphony:oscache:2.4.1", "javax.jms:jms:1.1")
  implementation("taglibs:standard:1.1.2")

  // we need to put it in .war
  implementation 'org.slf4j:slf4j-simple:1.7.+'

  //*** TEST TEST TEST

  testImplementation 'junit:junit:4.+'
  testImplementation 'org.mockito:mockito-inline:+'

  testImplementation project(':click-mock')

  // https://github.com/bmuschko/gradle-tomcat-plugin + id "com.bmuschko.tomcat" version "latest.release"
  def tomcatVersion = '8.0.+'
  tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
      "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
      "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"

  modules {
    module('velocity:velocity') {
      replacedBy 'org.apache.velocity:velocity', 'Use 1.7 instead of 1.3'
    }
  }
}
// https://tomgregory.com/how-to-exclude-gradle-dependencies/
configurations.all { // .implementation
  exclude group: 'velocity', module: 'velocity' // 1.3
  exclude group: "commons-logging", module: "commons-logging"
}

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

test {
  useJUnit()
  testLogging {
    events "passed", "skipped", "failed"
    showStandardStreams = true // show standard out & err of the test JVM on the console
    showExceptions = true
    exceptionFormat = 'full'
  }
  enableAssertions = true
  maxHeapSize = "500m"

  systemProperty("slf4j.detectLoggerNameMismatch", "true")
  systemProperty("file.encoding", "UTF-8")
  systemProperty("user.language", "en")
  Locale.setDefault(new Locale("en", "US"));
}
lombok {
  version = "latest.release"
}