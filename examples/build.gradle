plugins {
  id 'java'
  id 'war'
  id 'application'
  id 'idea'

  // https://github.com/bmuschko/gradle-tomcat-plugin
  id "com.bmuschko.tomcat" version "latest.release"

  id 'io.franzbecker.gradle-lombok' version 'latest.release'
}

repositories {
  mavenLocal()
  mavenCentral()
}

sourceCompatibility = 17

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
  options.compilerArgs.addAll(['-Xlint:all', '-parameters', '-g', '-Xmaxwarns', '999'])
  options.release.set(17) // javac --release 7..18+
  options.deprecation = false // todo step2 deprecated...
}

dependencies {
  // https://javadoc.io/doc/com.google.errorprone/error_prone_annotations/latest/index.html
  implementation("com.google.errorprone:error_prone_annotations:latest.release")
  // https://javadoc.io/doc/com.google.code.findbugs/jsr305/latest/index.html  [x] remove? jsr305â†’jsr308 ^ Nope! This is THE WINNER!
  implementation("com.google.code.findbugs:jsr305:latest.release")

  implementation 'javax.servlet:servlet-api:2.5'

  implementation 'org.slf4j:slf4j-api:1.7.+'
  implementation 'com.google.guava:guava:31.1-jre'
  implementation 'org.mvel:mvel2:latest.release'// 2.4.14

  implementation("com.github.ben-manes.caffeine:caffeine:latest.release")

  implementation 'org.apache.commons:commons-lang3:3.+'
  implementation 'commons-lang:commons-lang:2.+'
  implementation 'commons-fileupload:commons-fileupload:1.3.+'

  implementation 'org.springframework:spring-core:3.2.18.RELEASE'
  implementation 'org.springframework:spring-context:3.2.18.RELEASE'
  implementation 'org.springframework:spring-context-support:3.2.18.RELEASE'
  implementation 'org.springframework:spring-jdbc:3.2.18.RELEASE', 'org.springframework:spring-tx:3.2.18.RELEASE'
  implementation 'org.springframework:spring-web:3.2.18.RELEASE'
  implementation("org.springframework.security:spring-security-core:2.0.8.RELEASE")

  implementation project(':click')
  implementation project(':click-extras')
  implementation project(':click-cayenne')

  implementation 'org.apache.cayenne:cayenne-server:3.0.2'
  implementation("org.apache.poi:poi:3.6")
  implementation("javax.annotation:javax.annotation-api:1.3.2")
  implementation("opensymphony:quartz:1.6.3")

  // TEST TEST TEST

  testImplementation 'junit:junit:4.+'
  testImplementation 'org.mockito:mockito-inline:+'

  testRuntimeOnly 'org.slf4j:slf4j-simple:1.7.+'

  testImplementation project(':click-mock')

  // https://github.com/bmuschko/gradle-tomcat-plugin + id "com.bmuschko.tomcat" version "latest.release"
  tomcat "org.apache.tomcat.embed:tomcat-embed-core:8.5.+",
      "org.apache.tomcat.embed:tomcat-embed-jasper:8.5.+"
}
tomcat {
  httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
  ajpProtocol  = 'org.apache.coyote.ajp.AjpNio2Protocol'
}

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

test {
  useJUnit()
  maxHeapSize = "500m"
  enableAssertions = true

  testLogging.showStandardStreams = true // show standard out & err of the test JVM on the console

  System.setProperty("slf4j.detectLoggerNameMismatch", "true")
  System.setProperty("file.encoding", "UTF-8")
  System.setProperty("user.language", "en")
}

lombok {
  version = "1.+"
  sha256 = "" // don't verify lombok.jar
}