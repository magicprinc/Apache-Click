plugins {
  id 'java-library'
  id 'idea'
  id 'maven-publish'

  alias(libs.plugins.lombok)
  alias(libs.plugins.sonarLint)
  alias(libs.plugins.errorProne)
}

repositories {
  mavenLocal()
  mavenCentral()
}

javadoc {
  options.encoding = 'UTF-8'
  options.addBooleanOption('html5', true)
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
  options.compilerArgs.addAll(['-Xlint:all', '-parameters', '-g', '-Xmaxwarns', '999'])

  sourceCompatibility = 17 // for the IDE support
  targetCompatibility = 8
  options.release.set(8) // javac --release 7..18+
  options.deprecation = true
  javaCompiler.set( javaToolchains.compilerFor {
    languageVersion = JavaLanguageVersion.of(17)
  })

  options.errorprone {
    enabled = true
    disableWarningsInGeneratedCode = true
    excludedPaths = ".*/(generated|src/test).*/.*"
    disable("MissingSummary")
    disable("ParameterName")
    disable("UnusedVariable")
    errorproneArgs = ["--illegal-access=warn"]
  }
}
// https://docs.gradle.org/current/userguide/publishing_maven.html
publishing {
  publications { // artifactId == folder name
    maven(MavenPublication) {
      from components.java
    }
  }
}
java {
  withSourcesJar()
//  withJavadocJar()
}

dependencies {
  errorprone "com.google.errorprone:error_prone_core:latest.release"
  // Java 8 support
  annotationProcessor 'com.github.bsideup.jabel:jabel-javac-plugin:latest.release' // 0.4.2
  compileOnly 'com.github.bsideup.jabel:jabel-javac-plugin:latest.release'

  implementation 'javax.servlet:servlet-api:2.5'

  api("org.apache.velocity:velocity:1.+"){
    version {
      strictly '1.7'
    }
  }

  implementation project(':click')

  //*** TEST TEST TEST

  testImplementation libs.bundles.junit


  testImplementation project(':click-mock')

  testRuntimeOnly 'org.slf4j:slf4j-simple:1.7.+'

  modules {
    module('velocity:velocity') {
      replacedBy 'org.apache.velocity:velocity', 'Use 1.7 instead of 1.3'
    }
  }

}
// https://tomgregory.com/how-to-exclude-gradle-dependencies/
configurations.all { // .implementation
  exclude group: 'velocity', module: 'velocity' // 1.3 comes from somewhere..
  exclude group: "commons-logging", module: "commons-logging"
}

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

test {
  useJUnit()
  testLogging {
    events "passed", "skipped", "failed"
    showStandardStreams = true // show standard out & err of the test JVM on the console
    showExceptions = true
    exceptionFormat = 'full'
  }
  enableAssertions = true
  maxHeapSize = "500m"

  System.setProperty("slf4j.detectLoggerNameMismatch", "true")
  System.setProperty("file.encoding", "UTF-8")
  System.setProperty("user.language", "en")
  Locale.setDefault(new Locale("en", "US"));
}
lombok {
  version = "latest.release"
}
sonarLint {
  ignoreFailures = true
}