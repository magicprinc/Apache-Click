plugins {
  id 'java-library'
  id 'idea'
  id 'maven-publish'

  id("io.freefair.lombok")   version "latest.release" // id 'io.franzbecker.gradle-lombok' version 'latest.release'
  id("name.remal.sonarlint") version "latest.release" // https://github.com/remal-gradle-plugins/sonarlint + https://lift.sonatype.com/
  id("net.ltgt.errorprone")  version "latest.release" // https://errorprone.info/
}

repositories {
  mavenLocal()
  mavenCentral()
}

javadoc {
  options.encoding = 'UTF-8'
  options.addBooleanOption('html5', true)
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
  options.compilerArgs.addAll(['-Xlint:all', '-parameters', '-g', '-Xmaxwarns', '999'])
  sourceCompatibility = 17 // for the IDE support
  targetCompatibility = 8
  options.release.set(8) // javac --release 7..18+
  options.deprecation = true

  javaCompiler.set( javaToolchains.compilerFor {
    languageVersion = JavaLanguageVersion.of(17)
  })

  options.errorprone {
    enabled = true
    disableWarningsInGeneratedCode = true
    excludedPaths = ".*/(build/gen|test).*/.*"
    disable("MissingSummary")
    disable("ParameterName")
    disable("UnusedVariable")
    errorproneArgs = ["--illegal-access=warn"]
  }
}
// https://docs.gradle.org/current/userguide/publishing_maven.html
publishing {
  publications { // artifactId = folder name
    maven(MavenPublication) {
      from components.java
    }
  }
}
java {
  withSourcesJar()
//  withJavadocJar()
}

dependencies {
  errorprone "com.google.errorprone:error_prone_core:latest.release"
  implementation("com.google.errorprone:error_prone_annotations:latest.release")// https://javadoc.io/doc/com.google.errorprone/error_prone_annotations/latest/index.html
  implementation("com.google.code.findbugs:jsr305:latest.release")// https://javadoc.io/doc/com.google.code.findbugs/jsr305/latest/index.html [i] jsr305â†’jsr308

  // Java 8 support
  annotationProcessor 'com.github.bsideup.jabel:jabel-javac-plugin:latest.release' // 0.4.2
  compileOnly 'com.github.bsideup.jabel:jabel-javac-plugin:latest.release'

  implementation 'javax.servlet:servlet-api:2.5'

  implementation 'org.slf4j:slf4j-api:1.7.+'
  implementation 'ognl:ognl:latest.release'
  implementation("com.github.ben-manes.caffeine:caffeine:2.+")

  implementation project(':click')

  // TEST

  testImplementation 'junit:junit:4.+'
  testImplementation 'org.mockito:mockito-inline:+'

  testRuntimeOnly 'org.slf4j:slf4j-simple:1.7.+'

  testImplementation project(':click-mock')

}

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

test {
  useJUnit()
  testLogging {
    events "passed", "skipped", "failed"
    showStandardStreams = true // show standard out & err of the test JVM on the console
    showExceptions = true
    exceptionFormat = 'full'
  }
  enableAssertions = true
  maxHeapSize = "500m"

  System.setProperty("slf4j.detectLoggerNameMismatch", "true")
  System.setProperty("file.encoding", "UTF-8")
  System.setProperty("user.language", "en")
  Locale.setDefault(new Locale("en", "US"));
}
lombok {
  version = "latest.release"
}
sonarLint {
  ignoreFailures = true
}